<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!-- START SNIPPET: e1 -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd        http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">
    <!-- spring property placeholder, ignore resource not found as the file resource is for unit testing -->
    <context:property-placeholder ignore-resource-not-found="true" location="classpath:incident.properties,file:target/custom.properties"/>
    <!-- Use a bean to start and stop the real web service (is not Camel specific) -->
    <!-- In a real use-case the real web service would be probably located on another server
       but we simulate this in the same JVM -->
    <bean class="org.apache.camel.example.cxf.proxy.RealWebServiceBean"
        destroy-method="stop" id="realWebService" init-method="start">
        <!-- url of the real web service we have proxied -->
        <property name="url" value="http://localhost:${real.port}/real-webservice"/>
    </bean>
    <!-- bean that enriches the SOAP request -->
    <bean class="org.apache.camel.example.cxf.proxy.EnrichBean" id="enrichBean"/>
    <!-- this is the CXF web service we use as the front end -->
    <cxf:cxfEndpoint
        address="http://localhost:${proxy.port}/camel-example-cxf-proxy/webservices/incident"
        endpointName="s:ReportIncidentEndpoint" id="reportIncident"
        serviceName="s:ReportIncidentEndpointService"
        wsdlURL="etc/report_incident.wsdl" xmlns:s="http://reportincident.example.camel.apache.org"/>
    <!-- this is the Camel route which m                                                      proxies the real web service and forwards SOAP requests to it -->
    <camelContext id="camelContext-0f371442-cd12-496f-ab68-4c23e441204a" xmlns="http://camel.apache.org/schema/spring">
        <!-- property which contains port number -->
        <propertyPlaceholder id="properties" location="classpath:incident.properties,file:target/custom.properties"/>
        <endpoint id="callRealWebService" uri="http://localhost:${real.port}/real-webservice?throwExceptionOnFailure=false"/>
        <route id="_route1">
            <!-- CXF consumer using MESSAGE format -->
            <!-- log input received -->
            <!-- enrich the input by ensure the incidentId parameter is set -->
            <!-- Need to remove the http headers which could confuse the http endpoint -->
            <!-- send proxied request to real web service -->
            <!-- log answer from real web service -->
            <from id="_from1" uri="cxf:bean:reportIncident?dataFormat=MESSAGE"/>
            <to id="_to1" uri="log:input"/>
            <to id="_to2" uri="bean:enrichBean"/>
            <removeHeaders id="_removeHeaders1" pattern="CamelHttp*"/>
            <to id="_to3" ref="callRealWebService"/>
            <to id="_to4" uri="log:output"/>
        </route>
    </camelContext>
</beans>
<!-- END SNIPPET: e1 -->
